#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <math.h>
#include <string>
#include <string.h>
#include <queue>
#include <vector>
#include <set>
#include <deque>
#include <map>
#include <functional>
#include <numeric>

typedef long double LD;
typedef long long LL;
typedef unsigned long long ULL;
typedef unsigned int uint;

#define PI 3.1415926535897932384626433832795
#define sqr(x) ((x)*(x))

using namespace std;

vector<int> d[1111111];
int len[1111111];

bool SumEq(const vector<int>& d1, const vector<int>& d2, const vector<int>& dr) {
    for (int i = 0; i < 10; i++) if (dr[i] != d1[i] + d2[i]) return false;
    return true;
}

const string s[100][3] = 
{
{"102510","201","510"},
{"104260","260","401"},
{"105210","210","501"},
{"105264","204","516"},
{"105750","150","705"},
{"108135","135","801"},
{"110758","158","701"},
{"115672","152","761"},
{"116725","161","725"},
{"117067","167","701"},
{"118440","141","840"},
{"120600","201","600"},
{"123354","231","534"},
{"124483","281","443"},
{"125248","152","824"},
{"125433","231","543"},
{"125460","204","615"},
{"125500","251","500"},
{"126000","210","600"},
{"126027","201","627"},
{"126846","261","486"},
{"129640","140","926"},
{"129775","179","725"},
{"131242","311","422"},
{"132430","323","410"},
{"133245","315","423"},
{"134725","317","425"},
{"135828","231","588"},
{"135837","351","387"},
{"136525","215","635"},
{"136948","146","938"},
{"139500","150","930"},
{"140350","350","401"},
{"143500","350","410"},
{"145314","351","414"},
{"146137","317","461"},
{"146952","156","942"},
{"150300","300","501"},
{"152608","251","608"},
{"152685","261","585"},
{"153000","300","510"},
{"153436","356","431"},
{"156240","240","651"},
{"156289","269","581"},
{"156915","165","951"},
{"162976","176","926"},
{"163944","396","414"},
{"172822","221","782"},
{"173250","231","750"},
{"174370","371","470"},
{"175329","231","759"},
{"180225","225","801"},
{"180297","201","897"},
{"182250","225","810"},
{"182650","281","650"},
{"182700","210","870"},
{"186624","216","864"},
{"190260","210","906"},
{"192150","210","915"},
{"193257","327","591"},
{"193945","395","491"},
{"197725","275","719"},
{"201852","252","801"},
{"205785","255","807"},
{"211896","216","981"},
{"213466","341","626"},
{"215860","251","860"},
{"216733","323","671"},
{"217638","321","678"},
{"218488","248","881"},
{"218700","270","810"},
{"226498","269","842"},
{"226872","276","822"},
{"229648","248","926"},
{"233896","338","692"},
{"241564","461","524"},
{"245182","422","581"},
{"251896","296","851"},
{"253750","350","725"},
{"254740","470","542"},
{"260338","323","806"},
{"262984","284","926"},
{"263074","437","602"},
{"284598","489","582"},
{"284760","420","678"},
{"286416","468","612"},
{"296320","320","926"},
{"304717","431","707"},
{"312475","431","725"},
{"312975","321","975"},
{"315594","534","591"},
{"315900","351","900"},
{"319059","351","909"},
{"319536","336","951"},
{"326452","524","623"},
{"329346","342","963"},
{"329656","356","926"},
{"336550","530","635"},
{"336960","360","936"},
{"338296","392","863"}
};

string AddZero(const string& s, int x) {
    string res = s;
    for (int i = 0; i < x; i++) res += '0';
    return res;
}

int main() {
    freopen("vampire.in", "r", stdin);
    freopen("vampire.out", "w", stdout);

    int k, n;

    cin >> k >> n;
    if (n == 4) {
    
    len[0] = 0;
    d[0].resize(10);
    for (int i = 1; i <= 1000000; i++) {
        len[i]  = len[i / 10] + 1;
        d[i] = d[i / 10];
        d[i][i%10]++;
    }

    vector< pair< pair<int, int>, int> > ans;
    int fin = 1;
    for (int i = 0; i < n; i++) {
        fin *= 10;
    }
    for (int i = fin / 10; i < fin; ++i) {
        for (int j = 1; j * j <= i; ++j) if (i % j == 0) {
            if (len[j] * 2 == n && len[i / j] * 2 == n && SumEq(d[j], d[i / j], d[i])) {
                if (k)  {
                    printf("%d=%dx%d\n", i, j, i / j);
                    k--;
                    break;
                }
            }
        }
    }

    } else {
        for (int i = 0; i < k; i++) {
            cout << AddZero(s[i][0], n - 6) << "=" << AddZero(s[i][1], (n - 6) / 2) << "x" << AddZero(s[i][2], (n - 6) / 2) << endl;
        }
    }

//    cerr << clock() << endl;
    
    return 0;
}
