#ifdef DEBUG
#define _GLIBCXX_DEBUG
#endif
#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <cmath>
#include <string>
#include <cstring>
#include <queue>
#include <vector>
#include <set>
#include <deque>
#include <map>
#include <functional>
#include <numeric>
#include <sstream>
#include <complex>
#include <assert.h>

typedef long double LD;
typedef long long LL;
typedef unsigned long long ULL;
typedef unsigned int uint;

#define PI 3.1415926535897932384626433832795
#define sqr(x) ((x)*(x))

using namespace std;

LL random(vector<LL>& seed, LL& carry) {
    int i = seed.size();
    LL x = (seed[i - 22] - seed[i - 43] - carry) & 0xFFFFFFFF;
    carry = (seed[i - 22] - seed[i - 43] - carry) < 0;
    seed.push_back(x);
    return x;
}

string p2[100];

int main() {
    freopen(".in", "r", stdin);
    freopen(".out", "w", stdout);
    ios::sync_with_stdio(false);

p2[0] = "0";
p2[1] = "2";
p2[2] = "4";
p2[3] = "8";
p2[4] = "16";
p2[5] = "32";
p2[6] = "64";
p2[7] = "128";
p2[8] = "256";
p2[9] = "512";
p2[10] = "1024";
p2[11] = "2048";
p2[12] = "4096";
p2[13] = "8192";
p2[14] = "16384";
p2[15] = "32768";
p2[16] = "65536";
p2[17] = "131072";
p2[18] = "262144";
p2[19] = "524288";
p2[20] = "1048576";
p2[21] = "2097152";
p2[22] = "4194304";
p2[23] = "8388608";
p2[24] = "16777216";
p2[25] = "33554432";
p2[26] = "67108864";
p2[27] = "134217728";
p2[28] = "268435456";
p2[29] = "536870912";
p2[30] = "1073741824";
p2[31] = "2147483648";
p2[32] = "4294967296";
p2[33] = "8589934592";
p2[34] = "17179869184";
p2[35] = "34359738368";
p2[36] = "68719476736";
p2[37] = "137438953472";
p2[38] = "274877906944";
p2[39] = "549755813888";
p2[40] = "1099511627776";
p2[41] = "2199023255552";
p2[42] = "4398046511104";
p2[43] = "8796093022208";
p2[44] = "17592186044416";
p2[45] = "35184372088832";
p2[46] = "70368744177664";
p2[47] = "140737488355328";
p2[48] = "281474976710656";
p2[49] = "562949953421312";
p2[50] = "1125899906842624";
p2[51] = "2251799813685248";
p2[52] = "4503599627370496";
p2[53] = "9007199254740992";
p2[54] = "18014398509481984";
p2[55] = "36028797018963968";
p2[56] = "72057594037927936";
p2[57] = "144115188075855872";
p2[58] = "288230376151711744";
p2[59] = "576460752303423488";
p2[60] = "1152921504606846976";
p2[61] = "2305843009213693952";
p2[62] = "4611686018427387904";
p2[63] = "9223372036854775808";
p2[64] = "18446744073709551616";
p2[65] = "36893488147419103232";
p2[66] = "73786976294838206464";
p2[67] = "147573952589676412928";
p2[68] = "295147905179352825856";
p2[69] = "590295810358705651712";
p2[70] = "1180591620717411303424";
p2[71] = "2361183241434822606848";
p2[72] = "4722366482869645213696";
p2[73] = "9444732965739290427392";
p2[74] = "18889465931478580854784";
p2[75] = "37778931862957161709568";
p2[76] = "75557863725914323419136";
p2[77] = "151115727451828646838272";
p2[78] = "302231454903657293676544";
p2[79] = "604462909807314587353088";
p2[80] = "1208925819614629174706176";
p2[81] = "2417851639229258349412352";
p2[82] = "4835703278458516698824704";
p2[83] = "9671406556917033397649408";
p2[84] = "19342813113834066795298816";
p2[85] = "38685626227668133590597632";
p2[86] = "77371252455336267181195264";
p2[87] = "154742504910672534362390528";
p2[88] = "309485009821345068724781056";
p2[89] = "618970019642690137449562112";
p2[90] = "1237940039285380274899124224";
p2[91] = "2475880078570760549798248448";
p2[92] = "4951760157141521099596496896";
p2[93] = "9903520314283042199192993792";
p2[94] = "19807040628566084398385987584";
p2[95] = "39614081257132168796771975168";
p2[96] = "79228162514264337593543950336";
p2[97] = "158456325028528675187087900672";
p2[98] = "316912650057057350374175801344";
p2[99] = "633825300114114700748351602688";


    int T;
    cin >> T;
    while (T--) {
        int n;
        cin >> n;

        vector<LL> a(n);
        vector<LL> seed(43);
        LL carry = 0;
        for (int i = 0; i < n; ++i) {
            cin >> a[i];
            int c = 0;
            while (a[i] > 1) {
                ++c;
                a[i] >>= 1;
            }
            a[i] = c;
        }
        for (int i = 0; i < 43; ++i) cin >> seed[i];
//        if (T == 0) reverse(seed.begin(), seed.end());

        string s;
        int q;
        cin >> q >> s;
        for (int i = 0; i < q; ++i) {
            vector<LL> b(a);

            if (s[i] == 'r') reverse(a.begin(), a.end());

            int j = 0;
            for (int i = 0; i < n; ++i)
                if (a[i] != 0)
                    a[j++] = a[i];
            while (j < n) a[j++] = 0;
            
            for (int i = 1; i < n; ++i)
                if (a[i] && a[i - 1] == a[i]) {
                    a[i - 1] = a[i] + 1;
                    a[i] = 0;
                }
            
            j = 0;
            for (int i = 0; i < n; ++i)
                if (a[i] != 0)
                    a[j++] = a[i];
            while (j < n) a[j++] = 0;

            if (s[i] == 'r') reverse(a.begin(), a.end());


            if (b != a) {
                vector<int> em;
                for (int i = 0; i < n; ++i) if (a[i] == 0) em.push_back(i);
                if (em.size()) {
                    int pos = random(seed, carry) % em.size(), newval;
                    if ((random(seed, carry) % 10) == 0) {
                        newval = 2;
                    } else
                        newval = 1;
                    a[em[pos]] = newval;
                }
            }
        }

        for (int i = 0; i < n; ++i) {
            assert(a[i] < 100);
            cout << p2[a[i]] << " ";
        }
        cout << endl;
    }
//    cout << maxv << endl;
    
    return 0;
}
